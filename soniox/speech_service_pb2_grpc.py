# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from soniox import speech_service_pb2 as soniox_dot_speech__service__pb2


class SpeechServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Transcribe = channel.unary_unary(
        '/soniox.speech_service.SpeechService/Transcribe',
        request_serializer=soniox_dot_speech__service__pb2.TranscribeRequest.SerializeToString,
        response_deserializer=soniox_dot_speech__service__pb2.TranscribeResponse.FromString,
        )
    self.TranscribeStream = channel.stream_stream(
        '/soniox.speech_service.SpeechService/TranscribeStream',
        request_serializer=soniox_dot_speech__service__pb2.TranscribeStreamRequest.SerializeToString,
        response_deserializer=soniox_dot_speech__service__pb2.TranscribeStreamResponse.FromString,
        )
    self.CreateSpeechContext = channel.unary_unary(
        '/soniox.speech_service.SpeechService/CreateSpeechContext',
        request_serializer=soniox_dot_speech__service__pb2.CreateSpeechContextRequest.SerializeToString,
        response_deserializer=soniox_dot_speech__service__pb2.CreateSpeechContextResponse.FromString,
        )
    self.DeleteSpeechContext = channel.unary_unary(
        '/soniox.speech_service.SpeechService/DeleteSpeechContext',
        request_serializer=soniox_dot_speech__service__pb2.DeleteSpeechContextRequest.SerializeToString,
        response_deserializer=soniox_dot_speech__service__pb2.DeleteSpeechContextResponse.FromString,
        )
    self.ListSpeechContextNames = channel.unary_unary(
        '/soniox.speech_service.SpeechService/ListSpeechContextNames',
        request_serializer=soniox_dot_speech__service__pb2.ListSpeechContextNamesRequest.SerializeToString,
        response_deserializer=soniox_dot_speech__service__pb2.ListSpeechContextNamesResponse.FromString,
        )
    self.GetSpeechContext = channel.unary_unary(
        '/soniox.speech_service.SpeechService/GetSpeechContext',
        request_serializer=soniox_dot_speech__service__pb2.GetSpeechContextRequest.SerializeToString,
        response_deserializer=soniox_dot_speech__service__pb2.GetSpeechContextResponse.FromString,
        )
    self.UpdateSpeechContext = channel.unary_unary(
        '/soniox.speech_service.SpeechService/UpdateSpeechContext',
        request_serializer=soniox_dot_speech__service__pb2.UpdateSpeechContextRequest.SerializeToString,
        response_deserializer=soniox_dot_speech__service__pb2.UpdateSpeechContextResponse.FromString,
        )


class SpeechServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Transcribe(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def TranscribeStream(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CreateSpeechContext(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteSpeechContext(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListSpeechContextNames(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSpeechContext(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateSpeechContext(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SpeechServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Transcribe': grpc.unary_unary_rpc_method_handler(
          servicer.Transcribe,
          request_deserializer=soniox_dot_speech__service__pb2.TranscribeRequest.FromString,
          response_serializer=soniox_dot_speech__service__pb2.TranscribeResponse.SerializeToString,
      ),
      'TranscribeStream': grpc.stream_stream_rpc_method_handler(
          servicer.TranscribeStream,
          request_deserializer=soniox_dot_speech__service__pb2.TranscribeStreamRequest.FromString,
          response_serializer=soniox_dot_speech__service__pb2.TranscribeStreamResponse.SerializeToString,
      ),
      'CreateSpeechContext': grpc.unary_unary_rpc_method_handler(
          servicer.CreateSpeechContext,
          request_deserializer=soniox_dot_speech__service__pb2.CreateSpeechContextRequest.FromString,
          response_serializer=soniox_dot_speech__service__pb2.CreateSpeechContextResponse.SerializeToString,
      ),
      'DeleteSpeechContext': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteSpeechContext,
          request_deserializer=soniox_dot_speech__service__pb2.DeleteSpeechContextRequest.FromString,
          response_serializer=soniox_dot_speech__service__pb2.DeleteSpeechContextResponse.SerializeToString,
      ),
      'ListSpeechContextNames': grpc.unary_unary_rpc_method_handler(
          servicer.ListSpeechContextNames,
          request_deserializer=soniox_dot_speech__service__pb2.ListSpeechContextNamesRequest.FromString,
          response_serializer=soniox_dot_speech__service__pb2.ListSpeechContextNamesResponse.SerializeToString,
      ),
      'GetSpeechContext': grpc.unary_unary_rpc_method_handler(
          servicer.GetSpeechContext,
          request_deserializer=soniox_dot_speech__service__pb2.GetSpeechContextRequest.FromString,
          response_serializer=soniox_dot_speech__service__pb2.GetSpeechContextResponse.SerializeToString,
      ),
      'UpdateSpeechContext': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateSpeechContext,
          request_deserializer=soniox_dot_speech__service__pb2.UpdateSpeechContextRequest.FromString,
          response_serializer=soniox_dot_speech__service__pb2.UpdateSpeechContextResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'soniox.speech_service.SpeechService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
